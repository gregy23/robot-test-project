trigger:
  branches:
    include:
      - main  # Trigger on push to main

pool:
  vmImage: 'windows-latest'

variables:
  ROBOT_REPORTS_DIR: 'robot_results'

steps:

# 1. Use Python 3.11
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.11'

# 2. Install Robot Framework and SeleniumLibrary
- script: |
    python -m pip install --upgrade pip
    pip install robotframework
    pip install robotframework-seleniumlibrary
  displayName: 'Install Robot Framework and dependencies'

# 3. Show Python and Robot installation info (debug step)
- script: |
    where python
    where pip
    where robot
    pip list
  displayName: 'Debug: Confirm installations'

# 4. Show directory contents (helps confirm repo structure)
- script: |
    echo "Current directory:"
    cd
    echo "Repo root contents:"
    dir
    echo "robot_test folder contents:"
    dir robot_test
  displayName: 'Debug: Show project structure'
  #5. run the test scripts

- script: |
    robot --variable BROWSER:edge ^
          --output $(ROBOT_REPORTS_DIR)/output.xml ^
          --log $(ROBOT_REPORTS_DIR)/log.html ^
          --report $(ROBOT_REPORTS_DIR)/report.html ^
          robot_test/
  displayName: 'Run Robot Framework Test'
  continueOnError: true 
  
  
- task: CmdLine@2
  inputs:
    script: |
      robot test/
  continueOnError: true

# 6. Convert to JUnit format for test publishing
- script: |
    rebot --xunit $(ROBOT_REPORTS_DIR)/xunit.xml $(ROBOT_REPORTS_DIR)/output.xml
  displayName: 'Convert Robot Output to JUnit'

# 7. Publish test results to Azure DevOps
- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(ROBOT_REPORTS_DIR)/xunit.xml'
    testRunTitle: 'Robot Framework Test Results'
  condition: succeededOrFailed()

# 8. Publish all Robot output files as an artifact
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(ROBOT_REPORTS_DIR)'
    artifactName: 'RobotResults'
